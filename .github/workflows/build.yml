name: Build Template

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TOOLCHAIN_PATH: 'toolchain'

    steps:
    - name: Extract branch name
      shell: bash
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "##[set-output name=pr;]pr$(echo ${GITHUB_REF} | cut -d'/' -f3)"
      id: extract_branch

    - name: Checkout
      uses: actions/checkout@v1
      with:
        submodules: true

    - name: Setup Ruby 2.6
      uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.6.x'

    - name: Setup
      run: bash toolchain/setup/setup.sh

    - name: Test
      run: |
        rake docs:test

    - name: Pre-processing
      if: always()
      run: |
        rake docs:pre

    - name: Build
      run: |
        rake docs:build

    - name: Post-processing
      if: always()
      run: |
        rake docs:post
        cp -r /tmp/build/html public/

    - name: Prepend branch name
      if: github.event_name == 'push' && steps.extract_branch.outputs.branch != 'master'
      run: |
        mkdir -p branches/${{ steps.extract_branch.outputs.branch }}
        mv public/* branches/${{ steps.extract_branch.outputs.branch }}
        mv branches/${{ steps.extract_branch.outputs.branch }} public/

    - name: Prepend pull request number
      if: github.event_name == 'pull_request'
      run: |
        mkdir -p branches/${{ steps.extract_branch.outputs.pr }}
        mv public/* branches/${{ steps.extract_branch.outputs.pr }}
        mv branches/${{ steps.extract_branch.outputs.pr }} public/

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-session-name: GithubActions
        role-duration-seconds: 1200

    - name: Deploy
      run: bash .scripts/deploy.sh

